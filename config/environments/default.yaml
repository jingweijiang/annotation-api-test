# Default configuration for API Test Framework
# This file contains base configuration that applies to all environments

framework:
  name: "API Test Automation Framework"
  version: "1.0.0"
  author: "Enterprise Test Team"

# API Configuration
api:
  timeout: 30
  retries: 3
  backoff_factor: 0.3
  verify_ssl: true
  headers:
    User-Agent: "API-Test-Framework/1.0.0"
    Accept: "application/json"
    Content-Type: "application/json"

# Authentication Configuration
auth:
  type: "bearer"  # bearer, basic, api_key, oauth2
  token_header: "Authorization"
  refresh_threshold: 300  # seconds before token expiry to refresh

# Database Configuration (for test data setup)
database:
  pool_size: 5
  max_overflow: 10
  pool_timeout: 30
  pool_recycle: 3600

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
  file_max_bytes: 10485760  # 10MB
  file_backup_count: 5
  enable_colors: true

# Performance Configuration
performance:
  threshold_ms: 2000
  slow_test_threshold_ms: 30000
  memory_threshold_mb: 100
  cpu_threshold_percent: 80

# Security Configuration
security:
  enable_ssl_verification: true
  allowed_hosts: []
  blocked_hosts: []
  max_request_size: 10485760  # 10MB
  rate_limit:
    requests_per_minute: 100
    requests_per_hour: 1000

# Test Data Configuration
test_data:
  locale: "en_US"
  seed: 42
  cleanup_after_test: true
  persist_data: false

# Reporting Configuration
reporting:
  allure:
    results_dir: "reports/allure-results"
    report_dir: "reports/allure-report"
    categories_file: "config/allure/categories.json"
    environment_file: "config/allure/environment.properties"
  html:
    output_file: "reports/html/report.html"
    self_contained: true
  json:
    output_file: "reports/json/report.json"
    pretty_print: true
  coverage:
    html_dir: "reports/coverage/html"
    xml_file: "reports/coverage/coverage.xml"
    fail_under: 85

# Mock Configuration
mocking:
  wiremock:
    host: "localhost"
    port: 8080
    admin_port: 8081
    enable_browser_proxying: false
    preserve_host_header: false
  pact:
    broker_url: "http://localhost:9292"
    publish_verification_results: true
    provider_version: "1.0.0"

# Contract Testing Configuration
contract:
  pact:
    consumer_name: "api-test-framework"
    provider_name: "api-service"
    pact_dir: "tests/contract/pacts"
    log_level: "INFO"

# Parallel Execution Configuration
parallel:
  max_workers: 4
  chunk_size: 10
  timeout: 300

# Retry Configuration
retry:
  max_attempts: 3
  delay: 1.0
  backoff: 2.0
  exceptions:
    - "requests.exceptions.ConnectionError"
    - "requests.exceptions.Timeout"
    - "requests.exceptions.HTTPError"

# Cleanup Configuration
cleanup:
  auto_cleanup: true
  cleanup_timeout: 30
  preserve_on_failure: false

# Monitoring Configuration
monitoring:
  enable_metrics: true
  metrics_interval: 60
  influxdb:
    enabled: false
    host: "localhost"
    port: 8086
    database: "api_tests"
    username: ""
    password: ""
  grafana:
    enabled: false
    host: "localhost"
    port: 3000
    dashboard_id: "api-tests"

# Notification Configuration
notifications:
  enabled: false
  slack:
    webhook_url: ""
    channel: "#api-tests"
    username: "API Test Bot"
  email:
    smtp_server: ""
    smtp_port: 587
    username: ""
    password: ""
    recipients: []

# Feature Flags
features:
  enable_performance_monitoring: true
  enable_security_scanning: true
  enable_contract_testing: true
  enable_mock_services: true
  enable_parallel_execution: true
  enable_auto_retry: true
